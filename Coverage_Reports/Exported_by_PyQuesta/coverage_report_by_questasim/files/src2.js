var g_data = {"name":"../RTL/APB_Wrapper.sv","src":"/***********************************************************************\n * Author : Amr El Batarny\n * File   : APB_Wrapper.sv\n * Brief  : Top-level wrapper module connecting the APB slave to the\n *          external environment.\n **********************************************************************/\n\nmodule APB_Wrapper #(\n	parameter DATA_WIDTH	= 32,\n	parameter ADDR_WIDTH	= 32,\n	parameter NBYTES		= DATA_WIDTH/8\n	)(\n	// Global Signals\n	input wire						PCLK,\n	input wire						PRESETn,\n\n	// APB Signals\n	input wire						PSELx,\n	input wire [ADDR_WIDTH-1:0]		PADDR,\n	input wire						PWRITE,\n	input wire [NBYTES-1:0]			PSTRB,\n	input wire [DATA_WIDTH-1:0]		PWDATA,\n	input wire						PENABLE,\n	output wire [DATA_WIDTH-1:0]	PRDATA,\n	output wire						PREADY\n	);\n	\n	// Register File Signals\n	wire [ADDR_WIDTH-1:0]	addr;\n	wire					write_en;\n	wire					read_en;\n	wire [NBYTES-1:0]		byte_strobe;\n	wire [DATA_WIDTH-1:0]	wdata;\n	wire [DATA_WIDTH-1:0]	rdata;\n\n	assign PRDATA = rdata;\n\n	RegisterFile #(\n		.DATA_WIDTH(DATA_WIDTH),\n		.ADDR_WIDTH(ADDR_WIDTH),\n		.NBYTES(NBYTES)\n		)RegisterFile_inst(\n		.clk(PCLK),\n		.rst_n(PRESETn),\n		.addr(addr),\n		.read_en(read_en),\n		.write_en(write_en),\n		.byte_strobe(byte_strobe),\n		.wdata(wdata),\n		.rdata(rdata)\n		);\n	\n	APB_Slave #(\n		.DATA_WIDTH(DATA_WIDTH),\n		.ADDR_WIDTH(ADDR_WIDTH),\n		.NBYTES(NBYTES)\n		)APB_Slave_inst(\n		.PCLK(PCLK),\n		.PRESETn(PRESETn),\n		.PSELx(PSELx),\n		.PADDR(PADDR),\n		.PWRITE(PWRITE),\n		.PSTRB(PSTRB),\n		.PWDATA(PWDATA),\n		.PENABLE(PENABLE),\n		.PREADY(PREADY),\n		.addr(addr),\n		.write_en(write_en),\n		.read_en(read_en),\n		.byte_strobe(byte_strobe),\n		.wdata(wdata)\n		);\n	\n	dummy_dpi_initializer dummy_dpi_initializer_inst();\nendmodule","lang":"verilog"};
processSrcData(g_data);