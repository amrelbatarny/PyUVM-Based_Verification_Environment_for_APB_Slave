var g_data = {"name":"APB_seq_item_pkg.sv","src":"package APB_seq_item_pkg;\nexport \"DPI-C\" function sv_get;\nexport \"DPI-C\" function sv_put;\nexport \"DPI-C\" function sv_transport;\n\n\n// *** APB_seq_item ***\n    typedef byte unsigned APB_seq_item_buf_t[10];\n    typedef bit[0:79] APB_seq_item_packed_t;\n\n    class APB_seq_item;\n       rand  int unsigned  addr;\n       rand  int unsigned  data;\n       rand  byte unsigned  strobe;\n       rand  byte unsigned  type_sv;\n\n        function new(APB_seq_item_buf_t buffer={0,0,0,0,0,0,0,0,0,0});\n            APB_seq_item_packed_t packed_buf;\n            packed_buf = 80'(buffer);\n            addr = packed_buf[0:31];\n            data = packed_buf[32:63];\n            strobe = packed_buf[64:71];\n            type_sv = packed_buf[72:79];\n        endfunction\n\n        function string serialize();\n            string buffer;\n            buffer = $sformatf(\"%08h%08h%02h%02h\",addr,data,strobe,type_sv);\n            return buffer;\n        endfunction\n\n        // User-defined: parse that 20-char string back into fields\n        function void deserialize(string str);\n            addr        = str.substr( 0,  7).atohex();\n            data        = str.substr( 8, 15).atohex();\n            strobe      = str.substr(16, 17).atohex();\n            type_sv        = str.substr(18, 19).atohex();\n        endfunction\n    endclass\n\n`include \"APB_seq_item.svh\"\nendpackage","lang":"verilog"};
processSrcData(g_data);