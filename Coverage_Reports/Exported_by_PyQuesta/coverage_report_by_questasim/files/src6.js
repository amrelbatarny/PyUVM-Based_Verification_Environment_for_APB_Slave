var g_data = {"name":"APB_seq_item_pkg.sv","src":"package APB_seq_item_pkg;\nexport \"DPI-C\" function sv_get;\nexport \"DPI-C\" function sv_put;\nexport \"DPI-C\" function sv_transport;\n\n\n// *** APB_seq_item ***\n    typedef byte unsigned APB_seq_item_buf_t[24];\n    typedef bit[0:191] APB_seq_item_packed_t;\n\n    class APB_seq_item;\n       rand  int unsigned  PRESETn;\n       rand  int unsigned  PWDATA;\n       rand  int unsigned  PENABLE;\n       rand  int unsigned  PWRITE;\n       rand  int unsigned  PADDR;\n       rand  int unsigned  PSTRB;\n\n        function new(APB_seq_item_buf_t buffer={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0});\n            APB_seq_item_packed_t packed_buf;\n            packed_buf = 192'(buffer);\n            PRESETn = packed_buf[0:31];\n            PWDATA = packed_buf[32:63];\n            PENABLE = packed_buf[64:95];\n            PWRITE = packed_buf[96:127];\n            PADDR = packed_buf[128:159];\n            PSTRB = packed_buf[160:191];\n        endfunction\n\n        function string serialize();\n            string buffer;\n            buffer = $sformatf(\"%08h%08h%08h%08h%08h%08h\",PRESETn,PWDATA,PENABLE,PWRITE,PADDR,PSTRB);\n            return buffer;\n        endfunction\n\n        // User Defined\n        function void deserialize(string str);\n            // Extract fields from the packed string format:\n            // Format: PRESETn (1 char) + PWDATA (8-char hex) + PENABLE (1 char) + PWRITE (1 char) + PADDR (8-char hex)\n            \n            // PRESETn (1 character)\n            PRESETn = str.substr(0, 0).atoi();\n            \n            // PWDATA (characters 1-8, 8-digit hex)\n            PWDATA = str.substr(1, 8).atohex();\n            \n            // PENABLE (character 9)\n            PENABLE = str.substr(9, 9).atoi();\n            \n            // PWRITE (character 10)\n            PWRITE = str.substr(10, 10).atoi();\n            \n            // PADDR (characters 11-18, 8-digit hex)\n            PADDR = str.substr(11, 18).atohex();\n            \n            // PSTRB (character 19, 1-digit hex)\n            PSTRB = str.substr(19, 19).atohex();\n        endfunction\n\n    endclass\n\n    `include \"APB_seq_item.svh\"\nendpackage\n","lang":"verilog"};
processSrcData(g_data);