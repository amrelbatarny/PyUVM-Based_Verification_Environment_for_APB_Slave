var g_data = {"name":"../RTL/RegisterFile.sv","src":"module RegisterFile #(\n    parameter DATA_WIDTH = 32,\n    parameter ADDR_WIDTH = 32,\n    parameter NO_SLAVES  = 1					\n) (\n\n// Global Sinals\n	input wire  						PCLK,\n    input wire							PRESETn,  \n\n    input wire [ADDR_WIDTH-1 : 0]   	RegADDR,\n    input wire [DATA_WIDTH-1 : 0]   	RegWDATA,\n    input wire                      	RegWRITE,\n    input wire 							RegENABLE,\n\n    output reg [DATA_WIDTH-1 : 0]   	RegRDATA,\n    output 	                      		RegSLVERR,\n    output reg                      	RegREADY      \n);\n\n	// RegSLVERR is pripherable \n	assign RegSLVERR = 0;\n		\n	// Registers\n	reg [DATA_WIDTH-1:0] SYS_STATUS_REG;\n	reg [DATA_WIDTH-1:0] INT_CTRL_REG;\n	reg [DATA_WIDTH-1:0] DEV_ID_REG;\n	reg [DATA_WIDTH-1:0] MEM_CTRL_REG;\n	reg [DATA_WIDTH-1:0] TEMP_SENSOR_REG;\n	reg [DATA_WIDTH-1:0] ADC_CTRL_REG;\n	reg [DATA_WIDTH-1:0] DBG_CTRL_REG;\n	reg [DATA_WIDTH-1:0] GPIO_DATA_REG;\n	reg [DATA_WIDTH-1:0] DAC_OUTPUT_REG;\n	reg [DATA_WIDTH-1:0] VOLTAGE_CTRL_REG;\n	reg [DATA_WIDTH-1:0] CLK_CONFIG_REG;\n	reg [DATA_WIDTH-1:0] TIMER_COUNT_REG;\n	reg [DATA_WIDTH-1:0] INPUT_DATA_REG;\n	reg [DATA_WIDTH-1:0] OUTPUT_DATA_REG;\n	reg [DATA_WIDTH-1:0] DMA_CTRL_REG;\n	reg [DATA_WIDTH-1:0] SYS_CTRL_REG;\n\n    always @(posedge PCLK) begin\n    	if(~PRESETn) begin\n    		RegREADY <= 0;\n    		RegRDATA <= 0;\n    	end\n        else if(RegENABLE) begin\n\n        	if(RegWRITE) begin\n            	case (RegADDR)\n            		32'h0000_0000: SYS_STATUS_REG	<= RegWDATA;\n					32'h0000_0004: INT_CTRL_REG		<= RegWDATA;\n					32'h0000_0008: DEV_ID_REG		<= RegWDATA;\n					32'h0000_000c: MEM_CTRL_REG		<= RegWDATA;\n					32'h0000_0010: TEMP_SENSOR_REG	<= RegWDATA;\n					32'h0000_0014: ADC_CTRL_REG		<= RegWDATA;\n					32'h0000_0018: DBG_CTRL_REG		<= RegWDATA;\n					32'h0000_001c: GPIO_DATA_REG	<= RegWDATA;\n					32'h0000_0020: DAC_OUTPUT_REG	<= RegWDATA;\n					32'h0000_0024: VOLTAGE_CTRL_REG	<= RegWDATA;\n					32'h0000_0028: CLK_CONFIG_REG	<= RegWDATA;\n					32'h0000_002c: TIMER_COUNT_REG	<= RegWDATA;\n					32'h0000_0030: INPUT_DATA_REG	<= RegWDATA;\n					32'h0000_0034: OUTPUT_DATA_REG	<= RegWDATA;\n					32'h0000_0038: DMA_CTRL_REG		<= RegWDATA;\n					32'h0000_003c: SYS_CTRL_REG		<= RegWDATA;\n            	endcase\n\n            end else begin\n        		case (RegADDR)\n            		32'h0000_0000: RegRDATA <= SYS_STATUS_REG;\n					32'h0000_0004: RegRDATA <= INT_CTRL_REG;\n					32'h0000_0008: RegRDATA <= DEV_ID_REG;\n					32'h0000_000c: RegRDATA <= MEM_CTRL_REG;\n					32'h0000_0010: RegRDATA <= TEMP_SENSOR_REG;\n					32'h0000_0014: RegRDATA <= ADC_CTRL_REG;\n					32'h0000_0018: RegRDATA <= DBG_CTRL_REG;\n					32'h0000_001c: RegRDATA <= GPIO_DATA_REG;\n					32'h0000_0020: RegRDATA <= DAC_OUTPUT_REG;\n					32'h0000_0024: RegRDATA <= VOLTAGE_CTRL_REG;\n					32'h0000_0028: RegRDATA <= CLK_CONFIG_REG;\n					32'h0000_002c: RegRDATA <= TIMER_COUNT_REG;\n					32'h0000_0030: RegRDATA <= INPUT_DATA_REG;\n					32'h0000_0034: RegRDATA <= OUTPUT_DATA_REG;\n					32'h0000_0038: RegRDATA <= DMA_CTRL_REG;\n					32'h0000_003c: RegRDATA <= SYS_CTRL_REG;\n            	endcase\n            end\n\n            RegREADY <= 1;\n        end\n		else begin\n            RegREADY <= 0;\n		end\n        \n    end\n\nendmodule","lang":"verilog"};
processSrcData(g_data);